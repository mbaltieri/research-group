---
import { getCollection } from 'astro:content';
import PageLayout from '~/layouts/PageLayout.astro';

// Fetch all publications
const pubs = await getCollection('publications');

// Helper to safely convert addedAt ‚Üí timestamp
const toTime = (s?: string) => {
  const t = s ? new Date(s).getTime() : 0;
  return isNaN(t) ? 0 : t;
};

// Strict sort: newest first by addedAt, then fallback to file creation order
const sorted = pubs.sort((a, b) => toTime(b.data.addedAt) - toTime(a.data.addedAt));

function authorLine(authors: string[] = []) {
  return authors.join(', ');
}

function doiUrl(doi?: string) {
  if (!doi) return null;
  return /^https?:\/\//i.test(doi) ? doi : `https://doi.org/${doi}`;
}

function arxivUrl(id?: string) {
  if (!id) return null;
  return /^https?:\/\//i.test(id) ? id : `https://arxiv.org/abs/${id}`;
}
---

<PageLayout title="Publications">
  <section class="mx-auto max-w-7xl px-6 py-16">
    <h1 class="text-4xl font-bold tracking-tight mb-6">Publications (Newest first)</h1>

    <ul class="space-y-6">
      {sorted.map(({ data }) => {
        const links = {
          doi: doiUrl(data.doi),
          arxiv: arxivUrl(data.arxiv),
          pdf: data.pdf,
          code: data.code,
          slides: data.slides,
          poster: data.poster,
        };

        return (
          <li class="rounded-2xl border border-white/10 bg-white/5 p-6 backdrop-blur shadow-sm">
            <h3 class="text-lg font-semibold leading-snug">{data.title}</h3>

            <p class="mt-1 text-sm opacity-90">
              {authorLine(data.authors)}
              {data.venue ? ` ‚Äî ${data.venue}` : ''}
              {data.type ? ` ¬∑ ${data.type}` : ''}
              {data.year ? ` ¬∑ ${data.year}` : ''}
            </p>

            {data.abstract && (
              <p class="mt-3 text-sm leading-6 opacity-90">{data.abstract}</p>
            )}

            <div class="mt-4 flex flex-wrap gap-2 text-xs">
              {links.doi && <a href={links.doi} class="rounded-full border px-2.5 py-1">DOI</a>}
              {links.arxiv && <a href={links.arxiv} class="rounded-full border px-2.5 py-1">arXiv</a>}
              {links.pdf && <a href={links.pdf} class="rounded-full border px-2.5 py-1">PDF</a>}
              {links.code && <a href={links.code} class="rounded-full border px-2.5 py-1">Code</a>}
              {links.slides && <a href={links.slides} class="rounded-full border px-2.5 py-1">Slides</a>}
              {links.poster && <a href={links.poster} class="rounded-full border px-2.5 py-1">Poster</a>}
              {data.award && (
                <span class="rounded-full border px-2.5 py-1">üèÖ {data.award}</span>
              )}
            </div>

            {data.tags && data.tags.length > 0 && (
              <div class="mt-3 flex flex-wrap gap-2 text-[11px] opacity-80">
                {data.tags.map((t) => (
                  <span class="rounded-full border px-2 py-0.5">{t}</span>
                ))}
              </div>
            )}
          </li>
        );
      })}
    </ul>
  </section>
</PageLayout>

